version: "3.9"

services:
  postgres:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:8
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  libretranslate:
    image: libretranslate/libretranslate:latest
    restart: unless-stopped
    ports:
      - "5001:5000"  # 호스트 5001 → 컨테이너 5000
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5001/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3

  spacy-api:
    build:
      context: ./spacy-api
    container_name: spacy-api
    restart: unless-stopped
    volumes:
      - ./spacy-api:/app
    ports:
      - "8000:8000"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/health" ]
      interval: 10s
      timeout: 5s
      retries: 3
  fastapi-api:
    build:
      context: ./fastapi-api
    container_name: fastapi-api
    restart: unless-stopped
    ports:
      - "8001:8001"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8001/health" ]
      interval: 10s
      timeout: 5s
      retries: 3


volumes:
  pgdata:
  mongodata:
  redisdata: